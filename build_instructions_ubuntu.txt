This file will be deleted eventually after its contents are assimilated into the main
README file for the repo.

Each step of the build process from a clean install of Ubuntu 20.04 focal is documented.

System: Ubuntu 20.04.2 LTS

1. Install g++. This is best done by installing the "build_essential" package.
   apt install build_essential. You may need to add the official ubuntu package archive:
   apt add-repository 
   "deb http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse"
   sudo apt install build-essential. This also installs make and other useful utilities.


2. You will need CMake. To build from source, visit the cmake website and download the newest
   stable release. Unzip and extract with tar -xvf <cmake_file>. Move it to your home
   directory. In your home directory, create a subdirectory called cmake_<version>_build.
   Navigate to the cmake source directory you just downloaded. Run:
   ./bootstrap --prefix=/path/to/cmake_build

   then run: make -j
   and then run make install.

   navigate to the build folder and verify that you see the following subdirs:
   bin doc share

   bin contains the cmake executable - it will be called cmake. Within the bin directory,
   if you run ./cmake --version, it should print out the version. Run this command to get
   the full filepath of the executable and copy it:
   readlink -f cmake
   Now, to make it
   available from anywhere, open your .bashrc file in your home directory. If it does not exist,
   create it. Add this line anywhere:
   
   alias cmake=<paste the path immediately after equals sign, no quotes>.

   Search to make sure there is not an existing alias to cmake elsewhere. To use it
   in your current terminal window, type: source ~/.bashrc to instantiate the changes.
   Or, open a new terminal window and the bashrc file is processed automatically when you
   open the terminal window.

3. To run large problems, you will need to leverage a GPU. This means that nvcc must be
   installed: follow these instructions:
   https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html
   You will likely need a restart after this to initiate cuda drivers.

4. CUDA is now installed, but you must point your shell to it for it to find it.
   Add the PATH and LD_LIBRARY_PATH exports to your bashrc file. Open a new terminal window
   after this change so that they will take effect.


Notes:

add instructions to find the CUDA_Toolkit_ROOT_DIR in the cmake message if it is not found.
(by typing which nvcc and then inferring the top level dir from that)




























